{{- $mailsecret := (lookup "v1" "Secret" .Release.Namespace "mailsecret").data }}
{{- if eq .Values.mail.deployMailserver "1" }}
apiVersion: v1
kind: Secret
metadata:
  name: mailsecret
  namespace: {{ .Release.Namespace }}
type: Opaque
data: 
{{- $mailca :=(genCA .Chart.Annotations.mailCaCn 3650) }}
{{- $mailcert := genSignedCert .Chart.Annotations.mailServerCn (list "127.0.0.1") (list "imap" "smtp" "civimail" "imapdemo" "smtpdemo" "localhost") 365 $mailca}}
  imapUsername: {{ $mailsecret.imapUsername | default (randAlpha 24 | b64enc) }}
  imapUsername2: {{ $mailsecret.imapUsername2 | default (randAlpha 24 | b64enc) }}
  imapPassword: {{ $mailsecret.imapPassword | default (randAlpha 24 | b64enc) }}
  smtpUsername: {{ $mailsecret.smtpUsername | default (randAlpha 24 | b64enc) }}
  smtpPassword: {{ $mailsecret.smtpPassword | default (randAlpha 24 | b64enc) }}
  mailKey: {{ $mailsecret.mailKey | default ($mailcert.Key | b64enc) }}
  mailCert: {{ $mailsecret.mailCert | default ($mailcert.Cert | b64enc) }}
  mailCaCert: {{ $mailsecret.mailCaCert | default ($mailca.Cert | b64enc) }}
  mailCaKey: {{ $mailsecret.mailCaKey | default ($mailca.Key | b64enc) }}
{{- else }}
{{ print "#  imapUsername:" ( coalesce "imapUsername is set" (required "mailsecret.imapUsername missing" $mailsecret.imapUsername)) }}
{{ print "#  imapPassword:" ( coalesce "imapPassword is set" (required "mailsecret.imapPassword missing" $mailsecret.imapPassword)) }}
{{ print "#  smtpUsername:" ( coalesce "smtpUsername is set" (required "mailsecret.smtpUsername missing" $mailsecret.smtpUsername)) }}
{{ print "#  smtpPassword:" ( coalesce "smtpPassword is set" (required "mailsecret.smtpPassword missing" $mailsecret.smtpPassword)) }}
{{- end }}
